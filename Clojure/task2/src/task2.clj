(ns task2)

; Функция возвращает функцию-предикат, которая проверяет,
; делится ли число p на x без остатка.
(defn divisible? [p]
  (fn [x] (zero? (mod p x))))

; Бесконечная ленивая последовательность простых чисел, сгенерированная
; с использованием Решето Эратосфена.
(def primes
  (lazy-seq
    (filter
      (fn [p]
        ; Вычисляем квадратный корень из p один раз и сохраняем его.
        (let [sqrt-p (Math/sqrt p)]
          ; Проверяем, что число p не делится на любое из уже найденных
          ; простых чисел. Используем числа до квадратного корня из p
          ; для оптимизации проверки.
          (not-any? (divisible? p)
                    (take-while #(<= % sqrt-p) primes))))
      ; Исключаем 0 и 1 из последовательности, так как они не являются простыми числами.
      (drop 2 (range)))))